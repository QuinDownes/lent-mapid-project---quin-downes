// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`32000f`, img`
..................................................
..................................................
..................................................
..................................22222...........
.............222222..............2.............222
2222........2................22..........22222....
....222222............22222.......................
.................................222..............
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,sprites.dungeon.doorOpenNorth,sprites.dungeon.floorLight5,myTiles.tile11,myTiles.tile12,myTiles.tile13], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`3700100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000109060201060000000000000000000000070700000000000000050001000002000000000000000200000000000000000000000000000100000000000000010206050101060201060000070000020300000000000000000000000001000000000000000000000000000006010000000000000000000000000000000000000000000007000000000303000000000000000000000000000000030000000000000000000001030000000206000000000000000000000000000000070000000000000003030303000000000000000000000000000000000000000000000000000000000506030100000000000000070000000007000000000000000000000001060500000007000000000700000000000000000000000000000000000000000000000005050000000000070000000000000000000000000000000000010000000002000000000008000000000000000000000000000000050100000000000000000700000000000000000000000000070000040101000000010000000000000000000000000700000004090100000000000000000000000005050505050505000000000000050600000000000000000000000000000000000000030506010600000000000000000000000000000000000000000000000000000000030000000000000000000000000000000002050202000000000000000000000000000000000000000000000000000000000000000601000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
.......................................................
.......................................................
......................................2................
.....222222....................2.2..2.......2..........
....2.......2222222222.....22............2.............
.22...........................22...............2.......
...22...22.......................2222..................
..........2222........................222..............
...................22.......................2....2.....
................22.........................222...2.....
...........222............2222222......22..............
.....22222............................2................
2222...............................22.............2....
.......................................................
....................................................222
.......................................................
`, [myTiles.transparency16,sprites.dungeon.floorLight4,sprites.dungeon.floorLight5,sprites.dungeon.floorLight2,sprites.dungeon.floorLightMoss,sprites.dungeon.floorLight0,sprites.dungeon.floorLight1,myTiles.tile11,myTiles.tile13,sprites.dungeon.floorMixed], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile":
            case "tile4":return tile4;
            case "tile6":return tile6;
            case "tile0":
            case "tile5":return tile5;
            case "tile7":return tile7;
            case "tile8":return tile8;
            case "tile9":return tile9;
            case "tile11":
            case "tile10":return tile10;
            case "tile12":
            case "tile11":return tile11;
            case "tile13":
            case "tile12":return tile12;
            case "tile14":
            case "tile13":return tile13;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
